/***********************************************************************************************************************
 * This file was generated by the S32 Config Tools. Any manual edits made to this file
 * will be overwritten if the respective S32 Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef lpuart_LPUART_1_H
#define lpuart_LPUART_1_H

/**
 * @page misra_violations MISRA-C:2012 violations
 *
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, Global macro not referenced.
 * The global macro will be used in function call of the module.
 *
 */
/*******************************************************************************
 * Included files 
 ******************************************************************************/
#include "lpuart_driver.h"

/*******************************************************************************
 * Definitions 
 ******************************************************************************/
#define INST_LPUART_LPUART_0  0
/* Receive buffer size */
#define BUFFER_SIZE 64U


typedef struct
{
	uint8_t tr_idx;
	uint8_t tr_buf[BUFFER_SIZE];
	uint16_t tr_2ms;

	uint8_t tx_idx;
	uint8_t tx_len;
	uint8_t tx_buf[BUFFER_SIZE];
	uint16_t tx_2ms;
}UART_T;


void Init_Uart(void);
void rxCallback(void *driverState, uart_event_t event, void *userData);
void txCallback(void *driverState, uart_event_t event, void *userData);
void start_tx(uint8_t len);


extern lpuart_state_t lpUartState1;
extern UART_T Uart0;


#endif /* lpuart_LPUART_1_H */
